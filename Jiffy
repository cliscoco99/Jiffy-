import 'package:flutter/material.dart'; import 'package:image_picker/image_picker.dart'; import 'package:firebase_core/firebase_core.dart'; import 'package:firebase_storage/firebase_storage.dart'; import 'package:cloud_firestore/cloud_firestore.dart'; import 'package:just_audio/just_audio.dart'; import 'package:geolocator/geolocator.dart'; import 'package:google_maps_flutter/google_maps_flutter.dart';

void main() async { WidgetsFlutterBinding.ensureInitialized(); await Firebase.initializeApp(); runApp(JiffyApp()); }

class JiffyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( debugShowCheckedModeBanner: false, theme: ThemeData.dark(), home: JiffyHomePage(), ); } }

class JiffyHomePage extends StatefulWidget { @override _JiffyHomePageState createState() => _JiffyHomePageState(); }

class _JiffyHomePageState extends State<JiffyHomePage> { final ImagePicker _picker = ImagePicker(); final FirebaseStorage _storage = FirebaseStorage.instance; final FirebaseFirestore _firestore = FirebaseFirestore.instance; final AudioPlayer _audioPlayer = AudioPlayer();

XFile? _image; String? _imageUrl; String? _musicUrl; String? _description; Position? _position;

Future<void> _pickImage() async { final pickedImage = await _picker.pickImage(source: ImageSource.gallery); if (pickedImage != null) { setState(() => _image = pickedImage); } }

Future<void> _uploadImage() async { if (_image == null) return; final ref = _storage.ref().child("images/${DateTime.now().millisecondsSinceEpoch}.jpg"); await ref.putFile(File(_image!.path)); final url = await ref.getDownloadURL(); setState(() => _imageUrl = url); }

Future<void> _getLocation() async { Position position = await Geolocator.getCurrentPosition(desiredAccuracy: LocationAccuracy.high); setState(() => _position = position); }

Future<void> _saveToFirestore() async { if (_imageUrl != null && _description != null) { await _firestore.collection("posts").add({ "image": _imageUrl, "music": _musicUrl, "description": _description, "location": _position != null ? GeoPoint(_position!.latitude, _position!.longitude) : null, }); } }

@override Widget build(BuildContext context) { return Scaffold( appBar: AppBar(title: Text("Jiffy")), body: Column( children: [ _image != null ? Image.file(File(_image!.path)) : Placeholder(fallbackHeight: 200), TextField( decoration: InputDecoration(hintText: "Descripción"), onChanged: (value) => _description = value, ), TextField( decoration: InputDecoration(hintText: "URL de la música"), onChanged: (value) => _musicUrl = value, ), ElevatedButton(onPressed: _pickImage, child: Text("Seleccionar imagen")), ElevatedButton(onPressed: _uploadImage, child: Text("Subir imagen")), ElevatedButton(onPressed: _getLocation, child: Text("Obtener ubicación")), ElevatedButton(onPressed: _saveToFirestore, child: Text("Guardar")), ], ), ); } }

Archivo codemagic.yaml para compilar automáticamente la APK en Codemagic

yaml workflows: build-android: name: Build Android APK max_build_duration: 15 environment: flutter: stable android_signing: use_keystore: false scripts: - flutter pub get - flutter build apk --release artifacts: - build/app/outputs/flutter-apk/app-release.apk

